function AnvandareOchGrupper(){Anvandare(),Grupper()}function Anvandare(){const defaultOrgUnitPath="/Scoutnet",suspendedOrgUnitPath="/Scoutnet/Avstängda",allMembers=fetchScoutnetMembers();Logger.log("AllMembers.length by fetchScoutnetMembers = "+allMembers.length);const useraccounts=getGoogleAccounts("/Scoutnet"),membersFromMailingLists=readUserAccountConfigMembers(allMembers);Logger.log("membersFromMailingLists.length by readUserAccountConfigMembers = "+membersFromMailingLists.length);const memberNumbers=getMemberNumbers(membersFromMailingLists),tmpMemberNumbers=memberNumbers.slice(0),members=getMembersByMemberNumbers(membersFromMailingLists,memberNumbers);Logger.log("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"),Logger.log("MemberNumbers.length = "+memberNumbers.length),Logger.log("tmpMemberNumbers.length = "+tmpMemberNumbers.length);for(let p=0;p<userAccountConfig.length;p++){const scoutnetListId=userAccountConfig[p].scoutnetListId;let orgUnitPath="/Scoutnet";var membersInAList;userAccountConfig[p].orgUnitPath&&(orgUnitPath=orgUnitPath+"/"+userAccountConfig[p].orgUnitPath),Logger.log("----------------------------------"),Logger.log("orgUnitPath = "+orgUnitPath),createSuborganisationIfNeeded(orgUnitPath),membersInAList=scoutnetListId?fetchScoutnetMembersMultipleMailinglists(scoutnetListId,"",""):getScoutleaders(allMembers),Logger.log("MembersInAlist antal personer= "+membersInAList.length),Logger.log("TmpMemberNumbers.length = "+tmpMemberNumbers.length);const membersInAListFiltered=[];LoopMembersInAList:for(var i=0;i<membersInAList.length;i++)for(var k=0;k<tmpMemberNumbers.length;k++)if(membersInAList[i].member_no==tmpMemberNumbers[k]){Logger.log("I denna e-postlista finns "+membersInAList[i].first_name+" "+membersInAList[i].last_name),membersInAListFiltered.push(membersInAList[i]),tmpMemberNumbers.splice(k,1);continue LoopMembersInAList}Logger.log("Antal Scoutnetkonton i denna suborg= "+membersInAListFiltered.length),Logger.log("Antal Googlekonton i denna hela org= "+useraccounts.length);for(var k=0;k<membersInAListFiltered.length;k++){let account_exists=!1;userAccountsOuterLoop:for(var i=0;i<useraccounts.length;i++){const num_externalIds=useraccounts[i].externalIds.length;for(let m=0;m<num_externalIds;m++)if(membersInAListFiltered[k].member_no==useraccounts[i].externalIds[m].value){account_exists=!0,updateAccount(membersInAListFiltered[k],useraccounts[i],orgUnitPath);break userAccountsOuterLoop}}account_exists||(Logger.log("Dont exists K="+k+membersInAListFiltered[k].first_name+" "+membersInAListFiltered[k].last_name),createAccount(membersInAListFiltered[k],orgUnitPath))}}checkingIfToSuspendAccounts(useraccounts,memberNumbers,suspendedOrgUnitPath)}function readUserAccountConfigMembers(allMembers){const membersInMailingLists=[];for(let i=0;i<userAccountConfig.length;i++){const scoutnetListId=userAccountConfig[i].scoutnetListId,orgUnitPath=userAccountConfig[i].orgUnitPath;Logger.log("Read UserAccountConfig = "+i),Logger.log("aaa ScoutnetListId = "+scoutnetListId),scoutnetListId?membersInMailingLists.push.apply(membersInMailingLists,fetchScoutnetMembersMultipleMailinglists(scoutnetListId,"","")):membersInMailingLists.push.apply(membersInMailingLists,getScoutleaders(allMembers)),Logger.log(scoutnetListId+"   "+orgUnitPath)}return Logger.log("MembersInMailingLists.length "+membersInMailingLists.length),membersInMailingLists}function createSuborganisationIfNeeded(orgUnitPath){const index=orgUnitPath.lastIndexOf("/"),parentOrgUnitPath=orgUnitPath.substring(0,index),name=orgUnitPath.substring(index+1,orgUnitPath.length);Logger.log("parentOrgUnitPath "+parentOrgUnitPath),Logger.log("Orgname "+name),checkIfOrgUnitExists(parentOrgUnitPath)||createSuborganisationIfNeeded(parentOrgUnitPath);const boolOrgUnitExists=checkIfOrgUnitExists(orgUnitPath);if(!boolOrgUnitExists){const orgUnit={name:name,parentOrgUnitPath:parentOrgUnitPath};try{AdminDirectory.Orgunits.insert(orgUnit,"my_customer"),Logger.log("Skapade orgUnit "+orgUnitPath)}catch(e){Logger.log("Misslyckades att skapa orgUnit "+orgUnitPath),Logger.log("Fel "+e)}}}function checkIfOrgUnitExists(orgUnitPath){try{const page=AdminDirectory.Orgunits.list("my_customer",{orgUnitPath:orgUnitPath});return Logger.log("OrgUnit "+orgUnitPath+" finns"),!0}catch(e){return Logger.log("OrgUnit "+orgUnitPath+" finns ej, men borde skapas"),!1}}function checkingIfToSuspendAccounts(userAccounts,memberNumbers,suspendedOrgUnitPath){Logger.log("Kolla om ett konto ska stängas av"),createSuborganisationIfNeeded(suspendedOrgUnitPath);for(let i=0;i<userAccounts.length;i++){let member_exists=!1;const num_externalIds=userAccounts[i].externalIds.length;for(let m=0;m<num_externalIds;m++)contains(memberNumbers,userAccounts[i].externalIds[m].value)&&(member_exists=!0);member_exists||suspendAccount(userAccounts[i],suspendedOrgUnitPath)}}function makeNameReadyForEmailAdress(name){let nameEmail=name.toLowerCase().trim();return nameEmail=nameEmail.replace(/([\s])+/g,"."),nameEmail=nameEmail.replace(/[.][\-]/g,"-").replace(/[\-][.]/g,"-"),nameEmail=removeDiacritics(nameEmail),nameEmail=nameEmail.replace(/[^0-9a-z.\-]/gi,""),nameEmail}function createAccount(member,orgUnitPath){const first_name=member.first_name,first_name_email=makeNameReadyForEmailAdress(first_name),last_name=member.last_name,last_name_email=makeNameReadyForEmailAdress(last_name);let email=first_name_email+"."+last_name_email+"@"+domain;if(checkIfEmailExists(email))for(let t=1;t<5&&(email=first_name_email+"."+last_name_email+t+"@"+domain,checkIfEmailExists(email));t++);let user={primaryEmail:email,name:{givenName:first_name,familyName:last_name},externalIds:[{value:member.member_no,type:"organization"}],orgUnitPath:orgUnitPath,password:Math.random().toString(36)};user=AdminDirectory.Users.insert(user),Logger.log("Användare %s skapad.",user.primaryEmail)}function checkIfEmailExists(email){let pageToken,page;do{return page=AdminDirectory.Users.list({domain:domain,query:email=email,orderBy:"givenName",maxResults:150,pageToken:pageToken}),users=page.users,users?(Logger.log("Denna adress finns redan "+email),!0):(Logger.log("Ingen användare hittades med "+email),!1)}while(pageToken)}function updateAccount(member,useraccount,orgUnitPath){const go_first_name=useraccount.name.givenName,go_last_name=useraccount.name.familyName,go_suspended=useraccount.suspended,go_orgUnitPath=useraccount.orgUnitPath,first_name=member.first_name,last_name=member.last_name,email=useraccount.primaryEmail;if(go_first_name!=first_name||go_last_name!=last_name||go_suspended||go_orgUnitPath!=orgUnitPath){let user={name:{givenName:first_name,familyName:last_name},suspended:!1,orgUnitPath:orgUnitPath};user=AdminDirectory.Users.update(user,email),Logger.log("Användare %s %s uppdaterad med namn till %s %s",go_first_name,go_last_name,first_name,last_name),Logger.log("Användaren är nu i org "+orgUnitPath)}}function suspendAccount(userAccount,suspendedOrgUnitPath){const email=userAccount.primaryEmail,suspended=userAccount.suspended,orgUnitPath=userAccount.orgUnitPath;if(suspended&&orgUnitPath==suspendedOrgUnitPath)Logger.log("Användare %s är redan avstängd",email);else{let user={suspended:!0,orgUnitPath:suspendedOrgUnitPath};user=AdminDirectory.Users.update(user,email),Logger.log("Användare %s är nu avstängd",email)}}function getGoogleAccounts(defaultOrgUnitPath){let users,pageToken,page;do{if(page=AdminDirectory.Users.list({domain:domain,query:"orgUnitPath='"+defaultOrgUnitPath+"'",orderBy:"givenName",maxResults:500,pageToken:pageToken}),users=page.users,!users){Logger.log("Ingen användare hittades.");const empty=[];return empty}for(let i=0;i<users.length;i++){const user=users[i]}pageToken=page.nextPageToken}while(pageToken);return users}function getScoutleaders(allMembers){const leaders=[];for(let i=0;i<allMembers.length;i++){const group_role=allMembers[i].group_role,unit_role=allMembers[i].unit_role;0==group_role.length&&0==unit_role.length||leaders.push(allMembers[i])}return leaders}function fetchScoutnetMembers(){const url="https://"+scoutnet_url+"/api/"+organisationType+"/memberlist?id="+groupId+"&key="+api_key_list_all+"&pretty=1",response=UrlFetchApp.fetch(url,{muteHttpExceptions:!0}),json=response.getContentText(),data=JSON.parse(json),medlemmar=data.data,allMembers=[];for(x in medlemmar){const medlem=medlemmar[x],variabel_lista_not_lowercase=["member_no","first_name","last_name","ssno","note","date_of_birth","status","created_at","confirmed_at","group","unit","patrol","unit_role","group_role","sex","address_co","address_1","address_2","address_3","postcode","town","country","contact_mobile_phone","contact_home_phone","contact_mothers_name","contact_mobile_mum","contact_telephone_mum","contact_fathers_name","contact_mobile_dad","contact_telephone_dad","prev_term","prev_term_due_date","current_term","current_term_due_date"],variabel_lista_lowercase=["email","contact_email_mum","contact_email_dad","contact_alt_email","extra_emails"],member=setMemberFields(medlem,variabel_lista_not_lowercase,variabel_lista_lowercase);allMembers.push(member)}return allMembers}function listAllUsers(){let pageToken,page;do{page=AdminDirectory.Users.list({domain:domain,query:"orgUnitPath='/Scoutnet'",orderBy:"givenName",maxResults:100,pageToken:pageToken});const users=page.users;if(users)for(let i=0;i<users.length;i++){const user=users[i];Logger.log("%s (%s)",user.name.fullName,user.primaryEmail)}else Logger.log("Inga användare hittades.");pageToken=page.nextPageToken}while(pageToken)}